module Data

imports
  signatures/WebAssembly/-
  ast-syntax/-
  trans/codegen/-
  
rules

  data:
    callList -> dataList
    where 
    dataList := <concat> <map(importCall)> callList
      
  importCall:
    ExprStmt(Call(name, args, kwargs)) -> dataList
    where
      dataList := <map(dataStmt)> args

  dataStmt:
    (param) -> 
       WastData(
          WastExpr(WastInstr(I32Const("0"))), 
          Some(val)
        )
      where
        val := <to-string> param
       
  to-string:
    Num(val) -> string
      where
      string := <real-to-string> val
    
  to-string:
    String(val) -> val
