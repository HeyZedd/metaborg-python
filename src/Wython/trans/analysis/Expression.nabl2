module analysis/Expression

imports
  desugar/-
  analysis/-
      
rules

  callable[[ Name(ID(a), Load()) ^(s) ]] := 
    Var{a} -> s,
    Var{a} |-> d | warning $[Object [a] might not be defined],  // TODO: When this fails do not continue
    new s_fun, s_fun ---> s,  
//      d ?===> objScope,
      // Import the object body
      d <=== s_fun,
      Function{"call"} -> s_fun,
      Function{"__call__"} |-> d | warning $[Function '__call__' might not be defined for this object].
    
  argument[[(ID(i), expr) ^(s)]] :=
    //TODO: try to check if argument match function definition
    [[expr ^(s)]].

  [[ Call(func, args, kargs) ^(s) ]] :=
    callable[[func  ^(s)]],
    Map1(argument)[[args  ^(s)]],
    Map1(argument)[[kargs ^(s)]].
    
    
  // Arithmatic Expressions
  [[BinOp(op, l, r) ^(s)]] :=
    [[l ^(s)]],
    [[r ^(s)]].


  // Atoms
  [[Int(x) ^(s)]].
  [[String(x) ^(s)]].