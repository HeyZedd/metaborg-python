module analysis/Statement

imports
  desugar/-
  analysis/-

rules  
  
  Stmt[[ [] ^(s)]].	// Empty else and stuff
  Stmt[[ Pass() ^(s)]].
    
  Stmt[[ExprStmt(exp) ^(s)]] :=
    Expr[[exp ^(s): ty]],
    ty <sub? NoneT() | note $[Result of calculation is not stored] @exp.
 
  Type[[None(): UnitT()]].
  Type[[IntT(): IntT()]].
  Type[[StringT(): StringT()]].
  Type[[NoneT(): NoneT()]].
  Type[[BoolT(): BoolT()]].
  	
  Stmt[[Return(val) ^(s)]] :=
  	Expr[[val ^(s): ty]],
  	Var{"_$_return"} -> s,
  	Var{"_$_return"} |-> d | error $[Not inside a function],
  	d: expty,
  	ty <sub? expty | error $[Invalid return type. Found [ty], expected [expty]] @val.
  	
  ExistsT[[Name(ID(id), _) ^(s) : ty ]] :=
  	Var{id} -> s,
  	Var{id} |-> d | note $[First declariation of variable [id]] @id,
    d : ty | note $[First declariation of variable [id]] @id.	// Duplicates are not shown