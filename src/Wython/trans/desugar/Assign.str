module Assign

imports
  signatures/Expression-sig
  signatures/CompoundStatement-sig
  signatures/Test-sig
  signatures/Common-sig
  
  ast-syntax/AST-Expression
  ast-syntax/AST-Common

rules  
  desugar-stmt: ExpStatement(TestFirst(targets, _), AssignList(value)) -> Assign(<desugar-assign-target><map(desugar-expr)> targets, <desugar-assign> value)
  
  desugar-assign-target: [elem] -> Name(elem, Store())
  desugar-assign-target: list -> Tuple(<map(desugar-assign-target)> list, Store())
  desugar-assign-target: ID(name) -> Name(name, Store())
  desugar-assign-target: AtomExp(None(), atom, [h | t]) -> <desugar-assign-target> ([atom], h, t)
  
  desugar-assign-target: (obj, DotName(name), [h | t]) -> <desugar-atom> (<concat>[obj, [ID(name)]], h, t)
  desugar-assign-target: (obj, DotName(name), []) -> <desugar-assign-target> <concat> [obj, [ID(name)]]
  desugar-assign-target: [ID(name)] -> Name(ID(name), Store())
  desugar-assign-target: [e] -> e
  desugar-assign-target: [h | t] -> Attribute(<desugar-assign-target> t, h, Store())
  
  desugar-assign-target: e -> <debug> ("Cannot desugar assign target", e)
  //TODO FIX THIS (Make it STORE, not LOAD)
  
  desugar-assign: AssignList(list) -> <desugar-assign> list
  desugar-assign: TestListStarExp(exp) -> <desugar-assign> exp
  desugar-assign: TestFirst([elem], _) -> <desugar-expr> elem
  desugar-assign: TestFirst(list, _) -> Tuple(<map(desugar-expr)> list, Load())